Проект: vending-machine-react-dotnet

Краткое описание реализации:
--------------------------------
Веб-приложение "Автомат по продаже газированных напитков" реализовано на ASP.NET Core (бэкенд) и React + TypeScript (фронтенд). Приложение поддерживает работу с базой данных PostgreSQL, фильтрацию товаров, оформление заказов, оплату монетами, а также дополнительные функции.

Выполненные требования:
------------------------
- Использован ASP.NET Core для серверной части.
- Фронтенд реализован на React с использованием TypeScript (без any).
- Для управления состоянием на фронте применён Redux Toolkit.
- В качестве СУБД используется PostgreSQL.
- Реализован паттерн "репозиторий" и сервисы на бэкенде.
- Фильтрация товаров реализована на сервере.
- Взаимодействие с БД через подход "Code First" (Entity Framework Core).
- Вся бизнес-логика вынесена в сервисы.
- Каталог, оформление заказа, оплата и выдача сдачи реализованы в соответствии с ТЗ.

Выполнены дополнительные условия:
----------------------------------
1. Импорт Excel-файла с товарами в каталог (доп. условие №1). Реализовано через EPPlus.
2. Блокировка автомата для второго пользователя с сообщением "Извините, в данный момент автомат занят" (доп. условие №2, реализовано через SignalR).

Технологии:
------------
- ASP.NET Core 8.0
- Entity Framework Core (Code First)
- PostgreSQL
- React
- TypeScript
- Redux Toolkit
- SignalR 
- Docker, Docker Compose 
- Axios 
- EPPlus (xlsx) тк асинхронность

Примечания:
------------
- Для запуска используйте docker-compose (см. чуть ниже описание).
- Все основные требования и оба дополнительных условия реализованы.
- В каталоге товаров не менее 8 позиций, картинки для "простоты" добавил как статику в web api чтобы ссылки получить. 
  По большому счёту подключить Minio или другое S3 И сделать загрузку изображений не сложно, в гитхабе у меня лежит проек с этим, смогу объяснить.
- Вся логика оплаты и выдачи сдачи реализована согласно ТЗ.

Запуск фронтенда:
-------------------
cd .\frontend\vending-client\
docker compose up --build -d

http://localhost:3000

Запуск бекенда:
-------------------
cd .\backend\
docker compose up --build -d

http://localhost:5001

Немного доп информации:
------------------
1) Папка data в корне хранит excel файл с товарами, пожалуйста импортируйте его при первом запуске проекта.

2) Миграции автоматически применяются, монетки через seed data добавляются.

3) В системе всё хранится в копейках. При вводе умножается на 100, при выводе делится на 100. Если понадобится прояснить для чего, пожалуйста напишите.

Спасибо за рассмотрение! Если будут вопросы по коду, всё объясню, почему сделал так или иначе.